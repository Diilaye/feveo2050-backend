// Test complet du syst√®me WhatsApp avec renouvellement automatique
const whatsappService = require('./src/services/whatsappService');

async function testCompleteWhatsApp() {
  console.log('üß™ Test Complet WhatsApp avec Renouvellement Automatique');
  console.log('=========================================================\n');
  
  try {
    // Test 1: V√©rification du token actuel
    console.log('1Ô∏è‚É£ V√©rification du token actuel...');
    const isCurrentValid = await whatsappService.isCurrentTokenValid();
    console.log(`   Token actuel valide: ${isCurrentValid ? '‚úÖ OUI' : '‚ùå NON'}\n`);
    
    // Test 2: R√©cup√©ration d'un token valide
    console.log('2Ô∏è‚É£ R√©cup√©ration d\'un token valide...');
    const validToken = await whatsappService.getValidToken();
    console.log(`   Token obtenu: ${validToken.substring(0, 20)}...`);
    console.log(`   Longueur: ${validToken.length} caract√®res\n`);
    
    // Test 3: Test de connexion avec le nouveau syst√®me
    console.log('3Ô∏è‚É£ Test de connexion...');
    const connectionTest = await whatsappService.testConnection();
    console.log(`   Connexion: ${connectionTest.success ? '‚úÖ R√âUSSIE' : '‚ùå √âCHEC'}`);
    if (connectionTest.error) {
      console.log(`   Erreur: ${connectionTest.error}`);
    }
    console.log('');
    
    // Test 4: Envoi de message de test
    console.log('4Ô∏è‚É£ Test d\'envoi de message...');
    const messageTest = await whatsappService.sendVerificationCode(
      '221772488807',
      'TEST123',
      'AUTO_TOKEN'
    );
    console.log(`   Envoi: ${messageTest.success ? '‚úÖ R√âUSSI' : '‚ùå √âCHEC'}`);
    console.log(`   M√©thode: ${messageTest.method || 'N/A'}`);
    if (messageTest.messageId) {
      console.log(`   ID Message: ${messageTest.messageId}`);
    }
    console.log('');
    
    // Test 5: V√©rification du cache de token
    console.log('5Ô∏è‚É£ V√©rification du cache de token...');
    const cacheInfo = whatsappService.tokenCache;
    if (cacheInfo.token) {
      const timeLeft = Math.max(0, Math.floor((cacheInfo.expiresAt - Date.now()) / 1000 / 60));
      console.log(`   Token en cache: ‚úÖ OUI`);
      console.log(`   Expire dans: ${timeLeft} minutes`);
    } else {
      console.log(`   Token en cache: ‚ùå NON`);
    }
    console.log('');
    
    // R√©sum√©
    console.log('üìä R√âSUM√â');
    console.log('----------');
    console.log(`‚úÖ Token actuel: ${isCurrentValid ? 'Valide' : 'Invalide'}`);
    console.log(`üîÑ Renouvellement: ${connectionTest.success ? 'Fonctionnel' : 'En mode fallback'}`);
    console.log(`üì± Envoi messages: ${messageTest.success ? 'Op√©rationnel' : 'Mode fallback'}`);
    console.log(`üíæ Cache token: ${cacheInfo.token ? 'Actif' : 'Inactif'}`);
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}

// Fonction pour afficher les variables d'environnement (masqu√©es)
function showConfig() {
  console.log('\nüîß CONFIGURATION ACTUELLE');
  console.log('---------------------------');
  console.log(`App ID: ${process.env.WHATSAPP_APP_ID || 'NON D√âFINI'}`);
  console.log(`Business ID: ${process.env.WHATSAPP_BUSINESS_ID || 'NON D√âFINI'}`);
  console.log(`Phone Number ID: ${process.env.WHATSAPP_PHONE_NUMBER_ID || 'NON D√âFINI'}`);
  console.log(`App Secret: ${process.env.WHATSAPP_APP_SECRET ? '‚úÖ D√âFINI' : '‚ùå NON D√âFINI'}`);
  
  const token = process.env.WHATSAPP_ACCESS_TOKEN;
  if (token) {
    console.log(`Access Token: ${token.substring(0, 20)}...${token.substring(token.length - 10)} (${token.length} chars)`);
  } else {
    console.log(`Access Token: ‚ùå NON D√âFINI`);
  }
  console.log('');
}

// Ex√©cution
async function main() {
  showConfig();
  await testCompleteWhatsApp();
  
  console.log('\nüéØ PROCHAINES √âTAPES');
  console.log('---------------------');
  console.log('1. Si App Secret manque: R√©cup√©rez-le depuis la console Facebook');
  console.log('2. Si token invalide: G√©n√©rez un nouveau token depuis WhatsApp API');
  console.log('3. Red√©marrez le serveur apr√®s mise √† jour de .env');
  console.log('4. Le syst√®me g√©rera automatiquement le renouvellement');
  
  console.log('\nüìö Guides disponibles:');
  console.log('- WHATSAPP_SETUP_GUIDE.md : Configuration compl√®te');
  console.log('- WHATSAPP_TOKEN_RENEWAL.md : Renouvellement manuel');
}

main().catch(console.error);
