// Script d'initialisation MongoDB pour Docker
// Ce script s'ex√©cute automatiquement lors du premier d√©marrage du conteneur MongoDB

const { MongoClient } = require('mongodb');
require('dotenv').config();

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://admin:password123@localhost:27017/feveo2050?authSource=admin';

 console.log('üöÄ Connexion √† MongoDB...');
    await client.connect();
    
    const db = client.db('feveo2050');

console.log('üöÄ Initialisation de la base de donn√©es FEVEO 2050...');

// Cr√©er la base de donn√©es feveo2050
db = db.getSiblingDB('feveo2050');

const client = new MongoClient(MONGODB_URI);



// Cr√©er un utilisateur pour l'application
db.createUser({
  user: 'feveo_user',
  pwd: 'feveo_password',
  roles: [
    {
      role: 'readWrite',
      db: 'feveo2050'
    }
  ]
});

// Cr√©er les collections de base
db.createCollection('utilisateurs');
db.createCollection('gies');
db.createCollection('adhesions');
db.createCollection('cycleinvestissements');

console.log('‚úÖ Base de donn√©es FEVEO 2050 initialis√©e avec succ√®s!');

// Ins√©rer quelques donn√©es de test si on est en d√©veloppement
if (process.env.NODE_ENV !== 'production') {
  console.log('üîß Insertion des donn√©es de test...');

  // Ins√©rer un utilisateur admin de test
  db.utilisateurs.insertOne({
    nom: 'Admin',
    prenom: 'Test',
    email: 'admin@test.com',
    motDePasse: '$2b$12$example.hash.here',
    role: 'admin',
    permissions: ['all'],
    createdAt: new Date(),
    updatedAt: new Date()
  });
  
  console.log('‚úÖ Donn√©es de test ins√©r√©es!');
}
